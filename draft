import yfinance as yf
import matplotlib as plt
import seaborn
import datetime
import pandas as pd
import statsmodels


from sklearn.preprocessing import MinMaxScaler
import torch
import torch.nn as nn

from matplotlib import pyplot
from statsmodels.tsa.arima.model import ARIMA
from statsmodels.tsa.stattools import adfuller
from sklearn.metrics import mean_squared_error, mean_absolute_error


# Sample data for Electricity Consumption FOR MULTIVARIATE RNN
data = {
    'timestamp': pd.date_range(start='2023-01-01', periods=100, freq='H'),
    'consumption': np.random.randint(100, 1000, 100)

l = ['AAPL', 'MMM']

df_list = []

for t in l:
    df_list.append(pd.DataFrame([yf.Ticker(t).info]))

df = pd.concat(df_list)

print(df)




adf_result = adfuller(df)
print(adf_result[1])


from statsmodels.tsa.seasonal import seasonal_decompose

result = seasonal_decompose(df, model='additive')
result.plot()
pyplot.show()

length = int((len(df['High'])*90)/100)

train_data = df[:length]
test_data = df[length:]


